def CONTAINER_NAME="docker_apache"
def CONTAINER_TAG="v0.$BUILD_NUMBER"

def buildVersionString() {
    return '1.0_' + env.BUILD_NUMBER
}


def containerStop(containerName){
    try {
        echo "docker stop $containerName"
        sh "docker stop $containerName"
    } catch(error){}
}


def containerRemove(containerName){
    try {
        echo "docker rm $containerName"
        sh "docker rm $containerName"
    } catch(error){}
}


def imageRemove(containerName, tag){
    try {
        echo "docker image prune -f"
        sh "docker image prune -f"
        
        echo "docker rmi $containerName:$tag"
        sh "docker rmi $containerName:$tag"
    } catch(error){}
}


def imageBuild(containerName, tag){
    sh "docker build -t $containerName:$tag --pull --no-cache ."
    echo "Image build complete"
}

def runApp(containerName, tag){
    sh "docker run -d --rm -p 80:80 --name $containerName $containerName:$tag"
    echo "Application started"
}



pipeline {
    agent any

    stages {
        stage("Docker Container/Image Remove"){
            steps {
                echo "============          Remove Previous      ============"
                echo "============    Docker Container / Image   ============"
                containerStop(CONTAINER_NAME)
                containerRemove(CONTAINER_NAME)
                imageRemove(CONTAINER_NAME, CONTAINER_TAG)
            }
        }

       	stage('Image Build'){
            steps {
                echo "============ Select dockerfile from GitHub ============"
                echo "============        & Build Image          ============"
                dir('docker_file') {
                    imageBuild(CONTAINER_NAME, CONTAINER_TAG)
                }
		    }
	    } 

    }
}
